--Удаление таблиц
DROP TABLE IF EXISTS "FRIENDSHIP";
DROP TABLE IF EXISTS "LIKES";
DROP TABLE IF EXISTS "FILM_GENRE";
DROP TABLE IF EXISTS "GENRE";
DROP TABLE IF EXISTS "USER";
DROP TABLE IF EXISTS "FILM";
DROP TABLE IF EXISTS "MPA";

--Создание USER
CREATE TABLE IF NOT EXISTS PUBLIC."USER" (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	LOGIN CHARACTER VARYING(50) NOT NULL,
	EMAIL CHARACTER VARYING(50) NOT NULL,
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USER_PK PRIMARY KEY (ID)
);

--Создание MPA
CREATE TABLE IF NOT EXISTS PUBLIC.MPA (
	MPA_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	DESCRIPTION CHARACTER VARYING(200),
	CONSTRAINT MPA_PK PRIMARY KEY (MPA_ID)
);

--Создание FILM
CREATE TABLE IF NOT EXISTS PUBLIC.FILM (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	DESCRIPTION CHARACTER VARYING(200) NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	MPA INTEGER,
	CONSTRAINT FILM_PK PRIMARY KEY (ID),
	CONSTRAINT FILM_FK FOREIGN KEY (MPA) REFERENCES PUBLIC.MPA(MPA_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

--Создание FRIENDSHIP
CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDSHIP (
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER NOT NULL,
	STATUS_ID INTEGER NOT NULL,
	CONSTRAINT FRIENDSHIP_PK PRIMARY KEY (FRIEND_ID,USER_ID),
	CONSTRAINT FRIENDSHIP_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FRIENDSHIP_FK_1 FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC."USER"(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

--Создание GENRE
CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
	GENRE_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);

--Создание FILM_GENRE
CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRE (
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT FILM_GENRE_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT FILM_GENRE_FK_1 FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(GENRE_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);

--Создание LIKES
CREATE TABLE IF NOT EXISTS PUBLIC.LIKES (
	USER_ID INTEGER NOT NULL,
	FILM_ID INTEGER NOT NULL,
	CONSTRAINT LIKES_PK PRIMARY KEY (USER_ID,FILM_ID),
	CONSTRAINT LIKES_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT LIKES_FK_1 FOREIGN KEY (FILM_ID) REFERENCES PUBLIC."FILM"(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO MPA (NAME, DESCRIPTION)
VALUES ('G','У фильма нет возрастных ограничений'),
       ('PG','Детям рекомендуется смотреть фильм с родителями'),
       ('PG-13','Детям до 13 лет просмотр не желателен'),
       ('R','Лицам до 17 лет просматривать фильм можно только в присутствии взрослого'),
       ('NC-17','Лицам до 18 лет просмотр запрещён');

INSERT INTO GENRE (NAME)
VALUES ('Комедия'),
       ('Драма'),
       ('Мультфильм'),
       ('Триллер'),
       ('Документальный'),
       ('Боевик');